@model IPagedList<ProductModel>

@*import this so we get our HTML Helper*@
@using B1809531_EShop_MVC6.Helpers;
@using X.PagedList.Mvc.Core;

@*import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@using X.PagedList;
@using X.PagedList.Web.Common

<div class="row">
    @{
        if (Model != null && Model.Count > 0)
        {
            foreach (var item in Model)
            {
                <div class="col-lg-4 col-md-6 col-sm-6">
                    <div class="product__item">
                        <div class="product__item__pic">
                            <img src="/@(GetPath.ProductImage+item.Productimages.FirstOrDefault().Productimageurl)"
                                class="img-fluid" />
                            <ul class="product__item__pic__hover">
                                <li><a href="#"><i class="fa fa-shopping-cart"></i></a></li>
                            </ul>
                        </div>
                        <div class="product__item__text">
                            @{
                                if (item.Productishot == true)
                                {
                                    <h6 class="name-overflow">
                                        <i>
                                            <sub class="fa fa-heart-o text-danger"> Hot </sub>
                                            <a href="#"> @item.Productname</a>
                                        </i>

                                    </h6>
                                }
                                else
                                {
                                    <h6 class="name-overflow"><i><a href="#">@item.Productname</a></i></h6>

                                    
                                    
                                }
                            }
                            @{
                                if (item.Productsaleprice != item.Productprice)
                                {
                                    <h5> @String.Format("{0:n0}", item.Productsaleprice) VNĐ</h5>
                                    <h6> <s>@String.Format("{0:n0}", item.Productprice) VNĐ </s></h6>
                                }
                                else
                                {
                                    <h5> @String.Format("{0:n0}", item.Productsaleprice) VNĐ</h5>
                                }
                            }
                        </div>
                    </div>
                </div>
            }
        }

    }
</div>

@Html.PagedListPager(
    list: Model,
    generatePageUrl: page => Url.Action("GetOnePage", new { 
        brand = Context.Request.Query["brand"],
        category = Context.Request.Query["category"], 
        orderBy = Context.Request.Query["orderBy"],
        page }),
    options: PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
        pagedListRenderOptions: new PagedListRenderOptions
        {
            MaximumPageNumbersToDisplay = 5,
            DisplayPageCountAndCurrentLocation = true,
            UlElementClasses = new[]
            {
                "pagination"
            },
            ContainerDivClasses = new[]
            {
                "pagination-container d-flex justify-content-center"
            }
        },
        ajaxOptions: new AjaxOptions
        {
            HttpMethod = "GET",
            UpdateTargetId = "_listContainer"
        })
)
