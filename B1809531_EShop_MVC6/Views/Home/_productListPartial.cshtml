@model IPagedList<ProductModel>
@using X.PagedList.Mvc.Core;

@*import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@using X.PagedList;
@using X.PagedList.Web.Common

<div class="row">
    @{
        if (Model != null && Model.Count > 0)
        {
            foreach (var item in Model)
            {
                <div class="col-lg-4 col-md-6 col-sm-6">
                    <partial name="_productPartial" model="item"></partial>
                </div>
            }
        }
    }
</div>

@Html.PagedListPager(
    list: Model,
    generatePageUrl: page => Url.Action("GetOnePage", new {
        brand = Context.Request.Query["brand"],
        category = Context.Request.Query["category"],
        orderBy = Context.Request.Query["orderBy"],
        page }),
    options: PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
        pagedListRenderOptions: new PagedListRenderOptions
        {
            MaximumPageNumbersToDisplay = 5,
            DisplayPageCountAndCurrentLocation = true,
            UlElementClasses = new[]
            {
                "pagination"
            },
            ContainerDivClasses = new[]
            {
                "pagination-container d-flex justify-content-center"
            }
        },
        ajaxOptions: new AjaxOptions
        {
            HttpMethod = "GET",
            UpdateTargetId = "_listContainer"
        })
)
